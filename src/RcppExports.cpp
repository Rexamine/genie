// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hclust2_single
RObject hclust2_single(RObject distance, RObject objects, RObject control);
RcppExport SEXP grup_hclust2_single(SEXP distanceSEXP, SEXP objectsSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RObject >::type distance(distanceSEXP);
    Rcpp::traits::input_parameter< RObject >::type objects(objectsSEXP);
    Rcpp::traits::input_parameter< RObject >::type control(controlSEXP);
    __result = Rcpp::wrap(hclust2_single(distance, objects, control));
    return __result;
END_RCPP
}
// hclust2_single_approx
RObject hclust2_single_approx(RObject distance, RObject objects, RObject control);
RcppExport SEXP grup_hclust2_single_approx(SEXP distanceSEXP, SEXP objectsSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RObject >::type distance(distanceSEXP);
    Rcpp::traits::input_parameter< RObject >::type objects(objectsSEXP);
    Rcpp::traits::input_parameter< RObject >::type control(controlSEXP);
    __result = Rcpp::wrap(hclust2_single_approx(distance, objects, control));
    return __result;
END_RCPP
}
// medoid_approx
RObject medoid_approx(RObject distance, RObject objects, int iters, int nntry);
RcppExport SEXP grup_medoid_approx(SEXP distanceSEXP, SEXP objectsSEXP, SEXP itersSEXP, SEXP nntrySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RObject >::type distance(distanceSEXP);
    Rcpp::traits::input_parameter< RObject >::type objects(objectsSEXP);
    Rcpp::traits::input_parameter< int >::type iters(itersSEXP);
    Rcpp::traits::input_parameter< int >::type nntry(nntrySEXP);
    __result = Rcpp::wrap(medoid_approx(distance, objects, iters, nntry));
    return __result;
END_RCPP
}
// medoid_exact
RObject medoid_exact(RObject distance, RObject objects, bool limit);
RcppExport SEXP grup_medoid_exact(SEXP distanceSEXP, SEXP objectsSEXP, SEXP limitSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RObject >::type distance(distanceSEXP);
    Rcpp::traits::input_parameter< RObject >::type objects(objectsSEXP);
    Rcpp::traits::input_parameter< bool >::type limit(limitSEXP);
    __result = Rcpp::wrap(medoid_exact(distance, objects, limit));
    return __result;
END_RCPP
}
